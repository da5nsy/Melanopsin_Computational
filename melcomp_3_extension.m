%% Shortcut to this section

clear, clc, close all

load melcomp_3_fullWorkspace.mat %load everything generated by the code above
load melcomp_3_correlation_results.mat %load the results of the above code run (until corr_return) for all signals

%% Calculate predicted values of PC2

% Removes cs values for illuminants which are low (2600 -> 1547)
cs_b = cs(:,:,squeeze(mean(cs(1,:,:),2))>0.5); %cs_bright. Same criterea as curve fitting. Arbitrary threshold. Here only applies to L, not ideal.

cs_b_pc2est = zeros(size(cs_b)); %create variable to contain estimates of pc2 for each cs

sv_ind = 1;

for i = 1:size(cs,1) % signal
    for j= 1:size(cs,2) % reflectance
        for k = 1:size(cs_b,3) % illuminant
            cs_b_pc2est(i,j,k) = ...
                (p_1(i,sv_ind,1) * cs_b(sv_ind,j,k) + p_1(i,sv_ind,2))...
                * cs_b(i,j,k) + ...
                (p_2(i,sv_ind,1) * cs_b(sv_ind,j,k) + p_2(i,sv_ind,2));
        end
    end
end

% %Using PC1 instead of L
% pc1_b = pc_p.score(squeeze(mean(cs(1,:,:),2))>0.5,1);
% 
% for i = 1:size(cs,1) % signal
%     for j= 1:size(cs,2) % reflectance
%         for k = 1:size(cs_b,3) % illuminant
%             cs_b_pc2est(i,j,k) = ...
%                 (p_1(i,sv_ind,1) * pc1_b(k) + p_1(i,sv_ind,2))...
%                 * cs_b(i,j,k) + ...
%                 (p_2(i,sv_ind,1) * pc1_b(k) + p_2(i,sv_ind,2));
%         end
%     end
% end

%% Visualise performance for a subset of illuminants and colour signals
illuminants = 1:200:size(cs_b,3);
ds= 10;

for i = illuminants
    figure, hold on
    plot([0,120],[pc_p.score(i,2),pc_p.score(i,2)],'k','DisplayName','PC2')
    scatter(1:120,cs_b_pc2est(14,:,i),[],[0,.45,.74],'filled','MarkerFaceAlpha',.7,'DisplayName',['Estimate based on ',char(plt_lbls(14))])
    scatter(1:120,cs_b_pc2est(18,:,i),[],[.85,.3,0],'filled','MarkerFaceAlpha',.7,'DisplayName',['Estimate based on ',char(plt_lbls(18))])
    scatter(1:120,cs_b_pc2est(1,:,i),[],[.2,.9,0],'filled','MarkerFaceAlpha',.7,'DisplayName',['Estimate based on ',char(plt_lbls(1))])
    
    %scatter(1:120,cs_b_pc2est(end-1,:,i),[],[.2,0,0],'filled','MarkerFaceAlpha',.7,'DisplayName',['Estimate based on ',char(plt_lbls(end-1))])
    
    plot([0,120],[mean(cs_b_pc2est(14,1:ds:end,i)),mean(cs_b_pc2est(14,1:ds:end,i))],'Color',[0,.45,.74],'LineStyle',':','DisplayName',['Mean of ',char(plt_lbls(14)),' estimates (ds=',num2str(ds),')'])
    plot([0,120],[mean(cs_b_pc2est(18,1:ds:end,i)),mean(cs_b_pc2est(18,1:ds:end,i))],'Color',[.85,.3,0],'LineStyle',':','DisplayName',['Mean of ',char(plt_lbls(18)),' estimates (ds=',num2str(ds),')'])
    plot([0,120],[mean(cs_b_pc2est(1,1:ds:end,i)),mean(cs_b_pc2est(1,1:ds:end,i))],'Color',[.2,.9,0],'LineStyle',':','DisplayName',['Mean of ',char(plt_lbls(1)),' estimates (ds=',num2str(ds),')'])
    
    legend
    
    ylim([-2 2])
end

%%

%create a vector of all the actual pc2 scores, for only the 'bright' illums
pc2_b = pc_p.score(squeeze(mean(cs(1,:,:),2))>0.5,2);

nRefInd = [120,100,80,60,40,20,15,10,7,6,5,4,3,2,1]; %list of different numbers of reflectances

figure,
for rep=1:20
    
    for j=1:length(nRefInd)
        
        
        nRef = nRefInd(j); %number of reflectances
        % !!!!!!!! since it's random there will be different results each time
        refs = randi(size(cs,2),nRef,1); %pick the actual refs
        
        for i = 1:size(cs_b,3)
            %calculate the average over n reflectances
            cs_b_pc2est_av(:,i,j) = mean(cs_b_pc2est(:,refs,i),2);
        end
        
        for i=1:size(cs_b,1)
            %calculate difference between actual pc2 and estimated pc2
            cs_b_pc2est_diff(i,:,j) = cs_b_pc2est_av(i,:,j) - pc2_b';
        end
        
    end
    
    %
%     for i=1:size(cs_b,1)
%         %plot histograms of errors
%         figure,
%         hist(cs_b_pc2est_diff(i,:,1),100)
%         title(plt_lbls{i})
%         xlim([-1 1])
%     end
    
    %
    %figure,
    hold on
    scatter(1:size(cs_b,1),std(cs_b_pc2est_diff(:,:,1)'),'filled','k','MarkerFaceAlpha',.05)
    %scatter(1:size(cs_b,1),mean(abs(cs_b_pc2est_diff(:,:,1)')),'filled','k','MarkerFaceAlpha',.05)
    %scatter(1:size(cs_b,1),median(abs(cs_b_pc2est_diff(:,:,1)')),'filled','b','MarkerFaceAlpha',.05)
    grid on
    set(gca, 'XTick', 1:size(cs_b,1));
    set(gca, 'XTickLabel', plt_lbls);
    grid on
    set(gca, 'XTick', 1:size(cs_b,1));  
    set(gca, 'XTickLabel', plt_lbls);
    %ylim([0 0.2])
    xtickangle(45)
    %legend('std','mean','median')
    
end

%%

% caution: these figures are highly influenced by the random selection of refs above


figure('units','normalized','outerposition',[0 0 1 1]), hold on
for i = 1:size(cs_b_pc2est_diff,3)
    scatter(1:size(cs_b,1),mean(abs(cs_b_pc2est_diff(:,:,i)')),[],[i/size(cs_b_pc2est_diff,3),0,0],'filled')
end

grid on
set(gca, 'XTick', 1:size(cs_b,1));
set(gca, 'XTickLabel', plt_lbls);
ylim([0 0.2])
legend(num2str(nRefInd(:)))
xtickangle(45)
